%% load mocap struct
%% plotting directory -- change this
%mocapmasterdirectory = 'E:\Bence\Data\Motionanalysis_captures\';
mocapmasterdirectory = '\\140.247.178.37\Jesse\Motionanalysis_captures\';
savedirectory = strcat(mocapmasterdirectory,'Plots',filesep);
mkdir(savedirectory);

%% load or create struct
%createmocapfilestruct('Vicon8',mocapmasterdirectory) %this step can take an hour, potentially longer on the server
mocapfilestruct = loadmocapfilestruct('Vicon8',mocapmasterdirectory);
[descriptor_struct_1,mocapfilearray,mocapfilestruct,mocapvideodirectory] =  get_mocap_files('Vicon8','Vicon8_videotest',mocapmasterdirectory);
[mocapstruct_social] = preprocess_mocap_data(mocapfilearray,mocapfilestruct,descriptor_struct_1);

[modular_cluster_properties_social] = get_modularclustproperties(mocapstruct_social);
animate_markers_aligned_fullmovie(mocapstruct_social,modular_cluster_properties_social.clustering_inds_agg{2}(1:20:end))


%% convert video file directories to mp4
suffix = {'U','L','R'};
cameratype_ind = 2;
cameradirectory = strcat(mocapvideodirectory,filesep,'Camera',suffix{cameratype_ind},filesep);
videofolders = dir(cameradirectory);
good_directories = find(cat(1, videofolders.isdir)==1);

for mm = good_directories'
    if (numel(strfind(videofolders(mm).name,'6')))
        good_folder = videofolders(mm).name;
    end
end

imageseries_folder = strcat(cameradirectory,good_folder,filesep);


%% conver the mkv files to mp4 files
fprintf('converting mkv files \n')
camfolder = imageseries_folder;%strcat(imageseries_folder,cameradirectory);
read_mkv_file(camfolder,camfolder );



%% load .times file
%.times file
times_files = dir(strcat(camfolder,filesep,'*.times'));


f = fopen(strcat(camfolder,filesep,times_files.name));
float1 = fread(f,[1,100000000],'uint64');
frame_number = numel(float1);



%% synchronize .times file -- associate each frame with a frame
offset = float1(1);
video_frames = offset+round((0:size(mocapstruct_social.markers_preproc.HeadF,1)-1)*(1000/300));

matched_frames =arrayfun(@(x) find(video_frames(x)-float1>0,1,'last'),1:1000,'UniformOutput', false);

bad_frames = find(cellfun(@numel,matched_frames) == 0);
matched_frames_aligned = cat(2,zeros(1,numel(bad_frames)),cell2mat(matched_frames));

frames_to_align = 1:4000;


% 
% true_video_framerate = 59.82;
% frame_chunk = 5000;
% 
% % video_pc_traces_resampled{lk} = resample(double(video_pc_traces(1:num_pcs,:))',round(fps*100),round(true_video_framerate*100));
% 
% %preallocate
% video_pc_traces_resampled{lk} = zeros( floor(frames_to_analyze*300./true_video_framerate*1.1),num_pcs);
% frames_total = 0;
% frame_current = 0;
% fprintf('resampling video files \n')
% for kk = 1:frame_chunk: frames_to_analyze
%     chunk_start = kk;
%     chunk_end = kk+frame_chunk-1;
%     frame_chunk_here = frame_chunk;
%     if (chunk_end> frames_to_analyze)
%         chunk_end =  frames_to_analyze;
%         frame_chunk_here = (chunk_end-chunk_start+1);
%     end
%     
%     resample_rate = 1000.*(frame_chunk_here./(float1(chunk_end)-float1(chunk_start)));
%     fprintf('chunk %f resample rate %f \n',kk,resample_rate);
%     mult_factor = 200;
%     resampled_value = resample(double(video_pc_traces(1:num_pcs,chunk_start:chunk_end))',...
%         round(fps*mult_factor),round(resample_rate*mult_factor));
%     video_pc_traces_resampled{lk}( frame_current+1:(frame_current+size(resampled_value,1)),:) = resampled_value;
%     frames_total = frames_total+size(resampled_value,1);
%     frame_current = frame_current+size(resampled_value,1);
%     %              video_pc_traces_resampled{lk} = cat(1, video_pc_traces_resampled{lk},...
%     %                  resample(double(video_pc_traces(1:num_pcs,chunk_start:chunk_end))',round(fps*mult_factor),round(resample_rate*mult_factor)));
% end
% video_pc_traces_resampled{lk} = video_pc_traces_resampled{lk}(1:frame_current,:);
% fclose(f)


%% choose frames to synchronize,load videos

    movie_name_here = strcat(cameradirectory,filesep,num2str(vals(ll)),'.mkv');
            fprintf('For videofile %s loading in images \n',movie_name_here)
            tic
            videofile = [];
            %  imagefile = strcat(cameradirectory,filesep,movie_name_here);
            temp = mpfour_reader(movie_name_here,[]);
            videofile = cat(2,videofile,temp);
            
            videomatrix = single(cat(4,videofile(:).cdata));
            if (ll ==filelist(1))
                mean_videomatrix = mean(videomatrix,4);
            end
            videomatrixnormalized = bsxfun(@minus,videomatrix,mean_videomatrix);
            mask_position = round(mask_position);
            videomatrixnormalized = videomatrixnormalized(mask_position(2):(mask_position(2)+mask_position(4)),...
                mask_position(1):(mask_position(1)+mask_position(3)),:,:);
            toc


%% play movies side by side